using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libfontconfig"], :libfontconfig),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/Fontconfig_jll.jl/releases/download/Fontconfig-v2.13.1+6"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/Fontconfig.v2.13.1.aarch64-linux-gnu.tar.gz", "5246a8e19ea3daf1173ffc60c5cb6a53255e31144a813cab39def80892cb21c9"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/Fontconfig.v2.13.1.aarch64-linux-musl.tar.gz", "07a4b21fa37c0d35cc9afd66dbcdc533864120dfc2f55d5136486c73995a0c87"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/Fontconfig.v2.13.1.arm-linux-gnueabihf.tar.gz", "9f98deecaef1eb34a461ef41e068786d6cd1a729998f5727bf0d202581a43fc7"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/Fontconfig.v2.13.1.arm-linux-musleabihf.tar.gz", "7e01b4c4e584716591ded1467fe8e0e034cb48fc5bcad6a75a81ccc4c7eadfdc"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/Fontconfig.v2.13.1.i686-linux-gnu.tar.gz", "99331d81818b6754f9c48982f4758f5b8fd88b369cd6126a814dece7a0b58bae"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/Fontconfig.v2.13.1.i686-linux-musl.tar.gz", "b4601b1fab56df7eb30db2b3d360465b03378579a0b9f04900f3354ba09cbd24"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/Fontconfig.v2.13.1.powerpc64le-linux-gnu.tar.gz", "d2b44df3f1e7968b1f5c45c284c0f3d7e58633b6f746c9574cce3a43258649e4"),
    MacOS(:x86_64) => ("$bin_prefix/Fontconfig.v2.13.1.x86_64-apple-darwin14.tar.gz", "ce268d75ac1e421a2ec41c60a6c47bf195cf2e2558a2dc830fd4708f8789209f"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/Fontconfig.v2.13.1.x86_64-linux-gnu.tar.gz", "e092852fe2dbb8fd0848f030cf9a3f8b5244472f4d7ccfa50ba8fd43941799e0"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/Fontconfig.v2.13.1.x86_64-linux-musl.tar.gz", "02f6d59accebe7cd61106893925d3acc766d896bc48b0c21dc8c61fefd1e1063"),
    FreeBSD(:x86_64) => ("$bin_prefix/Fontconfig.v2.13.1.x86_64-unknown-freebsd11.1.tar.gz", "bb1903db96285c6453ac80440e4a2aeb5f431cfc84baa396d158028a283461f7"),
    Windows(:x86_64) => ("$bin_prefix/Fontconfig.v2.13.1.x86_64-w64-mingw32.tar.gz", "7dc4cfe3d605c936f1097518043f7b7f90e6f46892a0a7ad1db64544a7200cfb"),
    Windows(:i686) => ("$bin_prefix/Fontconfig.v2.13.1.i686-w64-mingw32.tar.gz", "0dae875ffafce57c29a0d547d108d9c7f85a22f6811075484470613c16a4af80"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
