using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libfreetype"], :libfreetype),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FreeType2_jll.jl/releases/download/FreeType2-v2.10.1+1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FreeType2.v2.10.1.aarch64-linux-gnu.tar.gz", "c7e51fa43c973ae008716842c20b420252d1ceea08b20b9042c6877b8d627ea7"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FreeType2.v2.10.1.aarch64-linux-musl.tar.gz", "c0e9218be1c84c13328f3c6ac7c9294f28d13b86622aff92f189a7abdbb15fb1"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FreeType2.v2.10.1.arm-linux-gnueabihf.tar.gz", "bdd75d77c0416f56b5e5bf26ce977291681fe7f644b9b2ea75de125432a11534"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FreeType2.v2.10.1.arm-linux-musleabihf.tar.gz", "d289424ea38fd799e63b6c52833b5d623b39f35f5582e593a6e8755b4a0c475d"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FreeType2.v2.10.1.i686-linux-gnu.tar.gz", "ca42f028de26ff54519f160062e20127a25c26fd26b6b8daf7276ad8e2d44267"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FreeType2.v2.10.1.i686-linux-musl.tar.gz", "16aa8fdaa62e8c2f1f9edc91159b7149c346a15c4ea52dc64074c512bceae2c9"),
    Windows(:i686) => ("$bin_prefix/FreeType2.v2.10.1.i686-w64-mingw32.tar.gz", "fda92c42111825ef39ec4d0b2bd5c9de445a3158c47d113110348c68b6321e26"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FreeType2.v2.10.1.powerpc64le-linux-gnu.tar.gz", "9ee08f941afcc6d3d94cbf4da52b30b31a0ff65b36d44f261aa8a9149d9a3f71"),
    MacOS(:x86_64) => ("$bin_prefix/FreeType2.v2.10.1.x86_64-apple-darwin14.tar.gz", "e1dc63e90b69446904c9d292b70a302fd22ec532c4edd1d758fc5fdcbd8ad17e"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FreeType2.v2.10.1.x86_64-linux-gnu.tar.gz", "4b287a224c6d8c648ece769ab363b1ae362bed6f891f02707dbb6174978ebcd3"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FreeType2.v2.10.1.x86_64-linux-musl.tar.gz", "2adcfedd439e341163e2c4336015ee99b79314eff05fc3ce41c078b03b5fcdf5"),
    FreeBSD(:x86_64) => ("$bin_prefix/FreeType2.v2.10.1.x86_64-unknown-freebsd11.1.tar.gz", "a148ee202538b25208546c54570a59d1ea36c921cdcde9a311ab9045b8366c9d"),
    Windows(:x86_64) => ("$bin_prefix/FreeType2.v2.10.1.x86_64-w64-mingw32.tar.gz", "82f5ce90389b93279d3614431897406839e8d22a3a7303786c6314918a3312e9"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
