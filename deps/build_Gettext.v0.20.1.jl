using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libgettext"], :libgettext),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/Gettext_jll.jl/releases/download/Gettext-v0.20.1+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/Gettext.v0.20.1.aarch64-linux-gnu.tar.gz", "088b2a3a3ed4f9308a4075b103325d21dbe979cc5f4b7b519e24ca653383b9fc"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/Gettext.v0.20.1.aarch64-linux-musl.tar.gz", "139a57ad6208dd45fb3fb6dcc5127adc08a614ad6229b7e750f545b75e5a8e9a"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/Gettext.v0.20.1.arm-linux-gnueabihf.tar.gz", "3ae5dc143318c6b5522a42b064f697cd846dfc0ed85841b6d06849cf52417f27"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/Gettext.v0.20.1.arm-linux-musleabihf.tar.gz", "4aee2e1833728922573f90251e70c3f18bf7c5c4781f54e228c569b71ab41a73"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/Gettext.v0.20.1.i686-linux-gnu.tar.gz", "694ea74b382c91c06660ccc4ebc7e0cce28aac46c9f596d2851a810f6fa7e9b4"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/Gettext.v0.20.1.i686-linux-musl.tar.gz", "fd7ad287c278855fa02abb6be15b423525266f43bcf53d6802f2af6b40313ea3"),
    Windows(:i686) => ("$bin_prefix/Gettext.v0.20.1.i686-w64-mingw32.tar.gz", "f667caf54f21fa9e6724ac1b96528dc754d95fa4406eb8ded8d59335015d5248"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/Gettext.v0.20.1.powerpc64le-linux-gnu.tar.gz", "ad1a6e81cde9d0da01084cd9c014a665461229cecb6d05fe60657f45c4786a03"),
    MacOS(:x86_64) => ("$bin_prefix/Gettext.v0.20.1.x86_64-apple-darwin14.tar.gz", "058ff69545db8ea66a70afb9d9991a824b471a88de48daa0a416daa131c68c80"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/Gettext.v0.20.1.x86_64-linux-gnu.tar.gz", "e6f9b82be1cee60184eb919fadba49f16044539d5902f612343d921c086aeab9"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/Gettext.v0.20.1.x86_64-linux-musl.tar.gz", "0c32bf677cc0df897b26ab5b5e3a1e23a812e1bc0cddaa8f5abe314c7c5bf0c2"),
    FreeBSD(:x86_64) => ("$bin_prefix/Gettext.v0.20.1.x86_64-unknown-freebsd11.1.tar.gz", "391f30c66ef34f26d64fe74954cd9c7c184b6762409a29fcb9ff54421b5e8f25"),
    Windows(:x86_64) => ("$bin_prefix/Gettext.v0.20.1.x86_64-w64-mingw32.tar.gz", "222f6e71ef3cfe3f3bdb089984e422e93cb65d138a835c764e6fd88b81c03ed6"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
