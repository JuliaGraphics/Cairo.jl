using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libpixman"], :libpixman),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/Pixman_jll.jl/releases/download/Pixman-v0.38.4+1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/Pixman.v0.38.4.aarch64-linux-gnu.tar.gz", "d0c3311012fbd05449d64d01fbb429ffd62136caee86e9eee4a792d7222c4edc"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/Pixman.v0.38.4.aarch64-linux-musl.tar.gz", "1a6d8f0705b232bc375b7d8981475b91760c6c02e297ca8b1a5ee5c1477d82f1"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/Pixman.v0.38.4.arm-linux-gnueabihf.tar.gz", "f799396e398ca5d7dc944c0c5c7752345b8c92be44d8babd987d0e579ae5bf52"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/Pixman.v0.38.4.arm-linux-musleabihf.tar.gz", "06ea92cc17cb7dccaf0b81699ecc1f560b0cf35a160f5268f544659a4b02cb44"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/Pixman.v0.38.4.i686-linux-gnu.tar.gz", "f2d8edb3e59dcedd0e7c41fd31fff8561b703b73000f4ae5b5e4fc4c2eb6caf7"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/Pixman.v0.38.4.i686-linux-musl.tar.gz", "f20a2fbb52d4043c8615cd2d5d0f8bebf8f8620cbbc3552d88d91d3453be8e41"),
    Windows(:i686) => ("$bin_prefix/Pixman.v0.38.4.i686-w64-mingw32.tar.gz", "f0d6a8d30457d9d3ff99069d7d449be7f10742646e693b69273df22283a7abce"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/Pixman.v0.38.4.powerpc64le-linux-gnu.tar.gz", "18145abe2c4f8b78aae5b15071c214a8d9d3a7d4c4f460dc76c81847af5c3456"),
    MacOS(:x86_64) => ("$bin_prefix/Pixman.v0.38.4.x86_64-apple-darwin14.tar.gz", "ef915b1c1ebc0d6b3a61dc058dfecfec0cff05663f7288db83461862022a0c13"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/Pixman.v0.38.4.x86_64-linux-gnu.tar.gz", "cf3c82002dd3b15b47cb220eff021ee3008ed0499550d20de04b6a5b21d7e0c4"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/Pixman.v0.38.4.x86_64-linux-musl.tar.gz", "67cb023d77223f0eecddaefcd13480722f8185c49ba3c911522d48a2ccce4b69"),
    FreeBSD(:x86_64) => ("$bin_prefix/Pixman.v0.38.4.x86_64-unknown-freebsd11.1.tar.gz", "57601a037623b7cda6414b209ba8886a4f34bb029a2de9ef0bcbf2848e4b371c"),
    Windows(:x86_64) => ("$bin_prefix/Pixman.v0.38.4.x86_64-w64-mingw32.tar.gz", "60a1ac4fbfd75d0191e75242137929afe377804f1eb92bf5d3e146c073751f4e"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
