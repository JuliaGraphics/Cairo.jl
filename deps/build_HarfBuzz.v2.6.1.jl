using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libharfbuzz"], :libharfbuzz),
    LibraryProduct(prefix, ["libharfbuzz-subset"], :libharfbuzz_subset),
    LibraryProduct(prefix, ["libharfbuzz-gobject"], :libharfbuzz_gobject),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/HarfBuzz_jll.jl/releases/download/HarfBuzz-v2.6.1+1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/HarfBuzz.v2.6.1.aarch64-linux-gnu.tar.gz", "92cb6b136ffe58fe578c16f7c169bf8f0dc7db6d756a73550bfe89c6341eb865"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/HarfBuzz.v2.6.1.aarch64-linux-musl.tar.gz", "6e06e55022ffce8e79bbff78307358c5f67d55c073e325bd470aa38e2c486b44"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/HarfBuzz.v2.6.1.arm-linux-gnueabihf.tar.gz", "b996b17a12a5c126d800dfb9d5345b37e7c3006f56e971f08def79987a22e5c1"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/HarfBuzz.v2.6.1.arm-linux-musleabihf.tar.gz", "6c80db261908cf544cecf8932d33153ccc9610fb6349e226ecef3440c9384f9a"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/HarfBuzz.v2.6.1.i686-linux-gnu.tar.gz", "9274830636aeb1278cf3f90938f7d6c906c3a63985aa626f4261424ae04e4de5"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/HarfBuzz.v2.6.1.i686-linux-musl.tar.gz", "618ee3e822b9b3f806435f6064cd1addd6cc8afaef1bd4a426a2d5d6aefce0c9"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/HarfBuzz.v2.6.1.powerpc64le-linux-gnu.tar.gz", "8b9cd838e21c8d10a2961db379a817b12af728727d3d6262265c46b3445335d6"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/HarfBuzz.v2.6.1.x86_64-linux-gnu.tar.gz", "50ea947a95055dd2c924df4b4b4969a87bebdce51d91f8d4b6674c49d2ac4a1c"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/HarfBuzz.v2.6.1.x86_64-linux-musl.tar.gz", "dc5ae5a9b49d7e056b8b9accbc315d4248b57db5e54acca81ad5be24fff0c72d"),
    FreeBSD(:x86_64) => ("$bin_prefix/HarfBuzz.v2.6.1.x86_64-unknown-freebsd11.1.tar.gz", "bec3611e36d3f7345088d8cb10578e7b741fe15dba039e8b4a1a568b4f7bd356"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
