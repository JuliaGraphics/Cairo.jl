using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libharfbuzz"], :libharfbuzz),
    LibraryProduct(prefix, ["libharfbuzz-subset"], :libharfbuzz_subset),
    LibraryProduct(prefix, ["libharfbuzz-gobject"], :libharfbuzz_gobject),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/HarfBuzz_jll.jl/releases/download/HarfBuzz-v2.6.1+4"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/HarfBuzz.v2.6.1.aarch64-linux-gnu.tar.gz", "271929aa70d15208cdff224cb789554f38bec95bb0b817543dd7376cbb76e664"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/HarfBuzz.v2.6.1.aarch64-linux-musl.tar.gz", "6673228fe1ba06ce3a09da3712bce93ea423ee42be5d1a0aa707391c077f369d"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/HarfBuzz.v2.6.1.arm-linux-gnueabihf.tar.gz", "13b5d17926be8e88ab33bb89571cba1832e34b9b4da5991b33240a67c03d28a3"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/HarfBuzz.v2.6.1.arm-linux-musleabihf.tar.gz", "f94f858db88710b1e2bb7ba74e492090c27ecc91103df7117a718c5aef461d09"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/HarfBuzz.v2.6.1.i686-linux-gnu.tar.gz", "cfd277090f9c49c8962c51772bf24f21b527dae04ad421283a7a2dc43a51d4ab"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/HarfBuzz.v2.6.1.i686-linux-musl.tar.gz", "f6aee90de10df16147c1b0c236530e0f778263115dcc3b3d0b45cafa56f88b82"),
    Windows(:i686) => ("$bin_prefix/HarfBuzz.v2.6.1.i686-w64-mingw32.tar.gz", "0af75b9b566a082fbc983672ee07a02450ad747821df45c16a4efe7f905a7421"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/HarfBuzz.v2.6.1.powerpc64le-linux-gnu.tar.gz", "0db7970990d71fcc6424d02a7e3787159c790b9ebc2121934a510a9d5a5fc1b4"),
    MacOS(:x86_64) => ("$bin_prefix/HarfBuzz.v2.6.1.x86_64-apple-darwin14.tar.gz", "0db652975b08e71d3d895b1c2284c6b56de2d580aa501ee9769b375e68fe5ee9"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/HarfBuzz.v2.6.1.x86_64-linux-gnu.tar.gz", "02919204254fe42687faec78a2bd6b626b07e9853efe2cb99beb60598fd5dc5b"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/HarfBuzz.v2.6.1.x86_64-linux-musl.tar.gz", "56704bed76bf7ec2ee0777f49435718868a40e2d99798de7123e812adadc5c58"),
    FreeBSD(:x86_64) => ("$bin_prefix/HarfBuzz.v2.6.1.x86_64-unknown-freebsd11.1.tar.gz", "b40d2fc81774961a4f6eaa90f98b8c666e6417da3aa0f72d4657089960894156"),
    Windows(:x86_64) => ("$bin_prefix/HarfBuzz.v2.6.1.x86_64-w64-mingw32.tar.gz", "50dad4e6c6d6213d4d5a8bf12e536e85530fdd3c8a2b4549bef749476c7f8a7e"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)