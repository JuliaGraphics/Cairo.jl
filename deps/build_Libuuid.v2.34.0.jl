using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libuuid"], :libuuid),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/Libuuid_jll.jl/releases/download/Libuuid-v2.34.0+3"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/Libuuid.v2.34.0.aarch64-linux-gnu.tar.gz", "581ef032828ea65effc19e1ad92a48321ea55714e929c8c7811f2f7f807ed32a"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/Libuuid.v2.34.0.aarch64-linux-musl.tar.gz", "ead1aeba507973572b7e7a64ce132cdec6f091833137cf624a4ed0e18d5b0dac"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/Libuuid.v2.34.0.arm-linux-gnueabihf.tar.gz", "1d4e08bb08561ba51a91aebf53a4c637491bb5a91647fc6c40979978a9197f54"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/Libuuid.v2.34.0.arm-linux-musleabihf.tar.gz", "767baf8d2156199917e56a03f2d62f82f65d8b460d5b3f847c14e630712388f8"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/Libuuid.v2.34.0.i686-linux-gnu.tar.gz", "7639e7dad7a6138d8e074cded5354d087825be6351173b8590b13a5991aa44a2"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/Libuuid.v2.34.0.i686-linux-musl.tar.gz", "ac72f81bc0a746972255da7dd601b906037514f789e0646c1971efd794aa8d94"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/Libuuid.v2.34.0.powerpc64le-linux-gnu.tar.gz", "41b9fce387a1333dc871cc53dc482ceea7982728e5e28b54d4b8e8df2584ba3d"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/Libuuid.v2.34.0.x86_64-linux-gnu.tar.gz", "7951a589812629d98bb861491ffeb2adcea1c82b14f51671faba9b9257c8eefc"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/Libuuid.v2.34.0.x86_64-linux-musl.tar.gz", "7bad57cc41fac8de3b80879aecc7d02564154c984aaefcd48a8963e8fbc1610a"),
    FreeBSD(:x86_64) => ("$bin_prefix/Libuuid.v2.34.0.x86_64-unknown-freebsd11.1.tar.gz", "1e93209a96bd52d371a964310cb4f04ec6b9308e5f3dd9fc617a32a7f94da2c4"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
